# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: txpool/txpool.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from erigon.proto.types import types_pb2 as types_dot_types__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13txpool/txpool.proto\x12\x06txpool\x1a\x1bgoogle/protobuf/empty.proto\x1a\x11types/types.proto\"\'\n\x08TxHashes\x12\x1b\n\x06hashes\x18\x01 \x03(\x0b\x32\x0b.types.H256\"\x1c\n\nAddRequest\x12\x0e\n\x06rlpTxs\x18\x01 \x03(\x0c\"B\n\x08\x41\x64\x64Reply\x12&\n\x08imported\x18\x01 \x03(\x0e\x32\x14.txpool.ImportResult\x12\x0e\n\x06\x65rrors\x18\x02 \x03(\t\"2\n\x13TransactionsRequest\x12\x1b\n\x06hashes\x18\x01 \x03(\x0b\x32\x0b.types.H256\"#\n\x11TransactionsReply\x12\x0e\n\x06rlpTxs\x18\x01 \x03(\x0c\"\x0e\n\x0cOnAddRequest\"\x1c\n\nOnAddReply\x12\x0e\n\x06rplTxs\x18\x01 \x03(\x0c\"\x0c\n\nAllRequest\"\xbb\x01\n\x08\x41llReply\x12 \n\x03txs\x18\x01 \x03(\x0b\x32\x13.txpool.AllReply.Tx\x1a[\n\x02Tx\x12)\n\x07txnType\x18\x01 \x01(\x0e\x32\x18.txpool.AllReply.TxnType\x12\x1b\n\x06sender\x18\x02 \x01(\x0b\x32\x0b.types.H160\x12\r\n\x05rlpTx\x18\x03 \x01(\x0c\"0\n\x07TxnType\x12\x0b\n\x07PENDING\x10\x00\x12\n\n\x06QUEUED\x10\x01\x12\x0c\n\x08\x42\x41SE_FEE\x10\x02\"w\n\x0cPendingReply\x12$\n\x03txs\x18\x01 \x03(\x0b\x32\x17.txpool.PendingReply.Tx\x1a\x41\n\x02Tx\x12\x1b\n\x06sender\x18\x01 \x01(\x0b\x32\x0b.types.H160\x12\r\n\x05rlpTx\x18\x02 \x01(\x0c\x12\x0f\n\x07isLocal\x18\x03 \x01(\x08\"\x0f\n\rStatusRequest\"N\n\x0bStatusReply\x12\x14\n\x0cpendingCount\x18\x01 \x01(\r\x12\x13\n\x0bqueuedCount\x18\x02 \x01(\r\x12\x14\n\x0c\x62\x61seFeeCount\x18\x03 \x01(\r\",\n\x0cNonceRequest\x12\x1c\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0b\x32\x0b.types.H160\"*\n\nNonceReply\x12\r\n\x05\x66ound\x18\x01 \x01(\x08\x12\r\n\x05nonce\x18\x02 \x01(\x04*l\n\x0cImportResult\x12\x0b\n\x07SUCCESS\x10\x00\x12\x12\n\x0e\x41LREADY_EXISTS\x10\x01\x12\x0f\n\x0b\x46\x45\x45_TOO_LOW\x10\x02\x12\t\n\x05STALE\x10\x03\x12\x0b\n\x07INVALID\x10\x04\x12\x12\n\x0eINTERNAL_ERROR\x10\x05\x32\xec\x03\n\x06Txpool\x12\x36\n\x07Version\x12\x16.google.protobuf.Empty\x1a\x13.types.VersionReply\x12\x31\n\x0b\x46indUnknown\x12\x10.txpool.TxHashes\x1a\x10.txpool.TxHashes\x12+\n\x03\x41\x64\x64\x12\x12.txpool.AddRequest\x1a\x10.txpool.AddReply\x12\x46\n\x0cTransactions\x12\x1b.txpool.TransactionsRequest\x1a\x19.txpool.TransactionsReply\x12+\n\x03\x41ll\x12\x12.txpool.AllRequest\x1a\x10.txpool.AllReply\x12\x37\n\x07Pending\x12\x16.google.protobuf.Empty\x1a\x14.txpool.PendingReply\x12\x33\n\x05OnAdd\x12\x14.txpool.OnAddRequest\x1a\x12.txpool.OnAddReply0\x01\x12\x34\n\x06Status\x12\x15.txpool.StatusRequest\x1a\x13.txpool.StatusReply\x12\x31\n\x05Nonce\x12\x14.txpool.NonceRequest\x1a\x12.txpool.NonceReplyB\x11Z\x0f./txpool;txpoolb\x06proto3')

_IMPORTRESULT = DESCRIPTOR.enum_types_by_name['ImportResult']
ImportResult = enum_type_wrapper.EnumTypeWrapper(_IMPORTRESULT)
SUCCESS = 0
ALREADY_EXISTS = 1
FEE_TOO_LOW = 2
STALE = 3
INVALID = 4
INTERNAL_ERROR = 5


_TXHASHES = DESCRIPTOR.message_types_by_name['TxHashes']
_ADDREQUEST = DESCRIPTOR.message_types_by_name['AddRequest']
_ADDREPLY = DESCRIPTOR.message_types_by_name['AddReply']
_TRANSACTIONSREQUEST = DESCRIPTOR.message_types_by_name['TransactionsRequest']
_TRANSACTIONSREPLY = DESCRIPTOR.message_types_by_name['TransactionsReply']
_ONADDREQUEST = DESCRIPTOR.message_types_by_name['OnAddRequest']
_ONADDREPLY = DESCRIPTOR.message_types_by_name['OnAddReply']
_ALLREQUEST = DESCRIPTOR.message_types_by_name['AllRequest']
_ALLREPLY = DESCRIPTOR.message_types_by_name['AllReply']
_ALLREPLY_TX = _ALLREPLY.nested_types_by_name['Tx']
_PENDINGREPLY = DESCRIPTOR.message_types_by_name['PendingReply']
_PENDINGREPLY_TX = _PENDINGREPLY.nested_types_by_name['Tx']
_STATUSREQUEST = DESCRIPTOR.message_types_by_name['StatusRequest']
_STATUSREPLY = DESCRIPTOR.message_types_by_name['StatusReply']
_NONCEREQUEST = DESCRIPTOR.message_types_by_name['NonceRequest']
_NONCEREPLY = DESCRIPTOR.message_types_by_name['NonceReply']
_ALLREPLY_TXNTYPE = _ALLREPLY.enum_types_by_name['TxnType']
TxHashes = _reflection.GeneratedProtocolMessageType('TxHashes', (_message.Message,), {
  'DESCRIPTOR' : _TXHASHES,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.TxHashes)
  })
_sym_db.RegisterMessage(TxHashes)

AddRequest = _reflection.GeneratedProtocolMessageType('AddRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDREQUEST,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.AddRequest)
  })
_sym_db.RegisterMessage(AddRequest)

AddReply = _reflection.GeneratedProtocolMessageType('AddReply', (_message.Message,), {
  'DESCRIPTOR' : _ADDREPLY,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.AddReply)
  })
_sym_db.RegisterMessage(AddReply)

TransactionsRequest = _reflection.GeneratedProtocolMessageType('TransactionsRequest', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONSREQUEST,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.TransactionsRequest)
  })
_sym_db.RegisterMessage(TransactionsRequest)

TransactionsReply = _reflection.GeneratedProtocolMessageType('TransactionsReply', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONSREPLY,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.TransactionsReply)
  })
_sym_db.RegisterMessage(TransactionsReply)

OnAddRequest = _reflection.GeneratedProtocolMessageType('OnAddRequest', (_message.Message,), {
  'DESCRIPTOR' : _ONADDREQUEST,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.OnAddRequest)
  })
_sym_db.RegisterMessage(OnAddRequest)

OnAddReply = _reflection.GeneratedProtocolMessageType('OnAddReply', (_message.Message,), {
  'DESCRIPTOR' : _ONADDREPLY,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.OnAddReply)
  })
_sym_db.RegisterMessage(OnAddReply)

AllRequest = _reflection.GeneratedProtocolMessageType('AllRequest', (_message.Message,), {
  'DESCRIPTOR' : _ALLREQUEST,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.AllRequest)
  })
_sym_db.RegisterMessage(AllRequest)

AllReply = _reflection.GeneratedProtocolMessageType('AllReply', (_message.Message,), {

  'Tx' : _reflection.GeneratedProtocolMessageType('Tx', (_message.Message,), {
    'DESCRIPTOR' : _ALLREPLY_TX,
    '__module__' : 'txpool.txpool_pb2'
    # @@protoc_insertion_point(class_scope:txpool.AllReply.Tx)
    })
  ,
  'DESCRIPTOR' : _ALLREPLY,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.AllReply)
  })
_sym_db.RegisterMessage(AllReply)
_sym_db.RegisterMessage(AllReply.Tx)

PendingReply = _reflection.GeneratedProtocolMessageType('PendingReply', (_message.Message,), {

  'Tx' : _reflection.GeneratedProtocolMessageType('Tx', (_message.Message,), {
    'DESCRIPTOR' : _PENDINGREPLY_TX,
    '__module__' : 'txpool.txpool_pb2'
    # @@protoc_insertion_point(class_scope:txpool.PendingReply.Tx)
    })
  ,
  'DESCRIPTOR' : _PENDINGREPLY,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.PendingReply)
  })
_sym_db.RegisterMessage(PendingReply)
_sym_db.RegisterMessage(PendingReply.Tx)

StatusRequest = _reflection.GeneratedProtocolMessageType('StatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _STATUSREQUEST,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.StatusRequest)
  })
_sym_db.RegisterMessage(StatusRequest)

StatusReply = _reflection.GeneratedProtocolMessageType('StatusReply', (_message.Message,), {
  'DESCRIPTOR' : _STATUSREPLY,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.StatusReply)
  })
_sym_db.RegisterMessage(StatusReply)

NonceRequest = _reflection.GeneratedProtocolMessageType('NonceRequest', (_message.Message,), {
  'DESCRIPTOR' : _NONCEREQUEST,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.NonceRequest)
  })
_sym_db.RegisterMessage(NonceRequest)

NonceReply = _reflection.GeneratedProtocolMessageType('NonceReply', (_message.Message,), {
  'DESCRIPTOR' : _NONCEREPLY,
  '__module__' : 'txpool.txpool_pb2'
  # @@protoc_insertion_point(class_scope:txpool.NonceReply)
  })
_sym_db.RegisterMessage(NonceReply)

_TXPOOL = DESCRIPTOR.services_by_name['Txpool']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\017./txpool;txpool'
  _IMPORTRESULT._serialized_start=865
  _IMPORTRESULT._serialized_end=973
  _TXHASHES._serialized_start=79
  _TXHASHES._serialized_end=118
  _ADDREQUEST._serialized_start=120
  _ADDREQUEST._serialized_end=148
  _ADDREPLY._serialized_start=150
  _ADDREPLY._serialized_end=216
  _TRANSACTIONSREQUEST._serialized_start=218
  _TRANSACTIONSREQUEST._serialized_end=268
  _TRANSACTIONSREPLY._serialized_start=270
  _TRANSACTIONSREPLY._serialized_end=305
  _ONADDREQUEST._serialized_start=307
  _ONADDREQUEST._serialized_end=321
  _ONADDREPLY._serialized_start=323
  _ONADDREPLY._serialized_end=351
  _ALLREQUEST._serialized_start=353
  _ALLREQUEST._serialized_end=365
  _ALLREPLY._serialized_start=368
  _ALLREPLY._serialized_end=555
  _ALLREPLY_TX._serialized_start=414
  _ALLREPLY_TX._serialized_end=505
  _ALLREPLY_TXNTYPE._serialized_start=507
  _ALLREPLY_TXNTYPE._serialized_end=555
  _PENDINGREPLY._serialized_start=557
  _PENDINGREPLY._serialized_end=676
  _PENDINGREPLY_TX._serialized_start=611
  _PENDINGREPLY_TX._serialized_end=676
  _STATUSREQUEST._serialized_start=678
  _STATUSREQUEST._serialized_end=693
  _STATUSREPLY._serialized_start=695
  _STATUSREPLY._serialized_end=773
  _NONCEREQUEST._serialized_start=775
  _NONCEREQUEST._serialized_end=819
  _NONCEREPLY._serialized_start=821
  _NONCEREPLY._serialized_end=863
  _TXPOOL._serialized_start=976
  _TXPOOL._serialized_end=1468
# @@protoc_insertion_point(module_scope)
