# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto.types import types_pb2 as types_dot_types__pb2
from proto.web3 import common_pb2 as web3_dot_common__pb2
from proto.web3 import eth_pb2 as web3_dot_eth__pb2


class EthApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BlockNumber = channel.unary_unary(
                '/web3.EthApi/BlockNumber',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=web3_dot_eth__pb2.BlockNumberResponse.FromString,
                )
        self.ResolveBlockHash = channel.unary_unary(
                '/web3.EthApi/ResolveBlockHash',
                request_serializer=web3_dot_eth__pb2.ResolveBlockHashRequest.SerializeToString,
                response_deserializer=web3_dot_eth__pb2.ResolveBlockHashResponse.FromString,
                )
        self.LightBlock = channel.unary_unary(
                '/web3.EthApi/LightBlock',
                request_serializer=web3_dot_eth__pb2.BlockRequest.SerializeToString,
                response_deserializer=web3_dot_eth__pb2.LightBlockResponse.FromString,
                )
        self.FullBlock = channel.unary_unary(
                '/web3.EthApi/FullBlock',
                request_serializer=web3_dot_eth__pb2.BlockRequest.SerializeToString,
                response_deserializer=web3_dot_eth__pb2.FullBlockResponse.FromString,
                )
        self.TransactionByHash = channel.unary_unary(
                '/web3.EthApi/TransactionByHash',
                request_serializer=types_dot_types__pb2.H256.SerializeToString,
                response_deserializer=web3_dot_eth__pb2.TransactionResponse.FromString,
                )
        self.SendTransaction = channel.unary_unary(
                '/web3.EthApi/SendTransaction',
                request_serializer=web3_dot_common__pb2.Transaction.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class EthApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BlockNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveBlockHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LightBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FullBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionByHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EthApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BlockNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.BlockNumber,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=web3_dot_eth__pb2.BlockNumberResponse.SerializeToString,
            ),
            'ResolveBlockHash': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveBlockHash,
                    request_deserializer=web3_dot_eth__pb2.ResolveBlockHashRequest.FromString,
                    response_serializer=web3_dot_eth__pb2.ResolveBlockHashResponse.SerializeToString,
            ),
            'LightBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.LightBlock,
                    request_deserializer=web3_dot_eth__pb2.BlockRequest.FromString,
                    response_serializer=web3_dot_eth__pb2.LightBlockResponse.SerializeToString,
            ),
            'FullBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.FullBlock,
                    request_deserializer=web3_dot_eth__pb2.BlockRequest.FromString,
                    response_serializer=web3_dot_eth__pb2.FullBlockResponse.SerializeToString,
            ),
            'TransactionByHash': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionByHash,
                    request_deserializer=types_dot_types__pb2.H256.FromString,
                    response_serializer=web3_dot_eth__pb2.TransactionResponse.SerializeToString,
            ),
            'SendTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTransaction,
                    request_deserializer=web3_dot_common__pb2.Transaction.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'web3.EthApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EthApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BlockNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/web3.EthApi/BlockNumber',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            web3_dot_eth__pb2.BlockNumberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveBlockHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/web3.EthApi/ResolveBlockHash',
            web3_dot_eth__pb2.ResolveBlockHashRequest.SerializeToString,
            web3_dot_eth__pb2.ResolveBlockHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LightBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/web3.EthApi/LightBlock',
            web3_dot_eth__pb2.BlockRequest.SerializeToString,
            web3_dot_eth__pb2.LightBlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FullBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/web3.EthApi/FullBlock',
            web3_dot_eth__pb2.BlockRequest.SerializeToString,
            web3_dot_eth__pb2.FullBlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionByHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/web3.EthApi/TransactionByHash',
            types_dot_types__pb2.H256.SerializeToString,
            web3_dot_eth__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/web3.EthApi/SendTransaction',
            web3_dot_common__pb2.Transaction.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
